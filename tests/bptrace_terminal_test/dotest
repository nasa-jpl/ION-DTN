#!/bin/bash
#

# adapted from status_rpts test
# Silas Springer
# May 15, 2023

# documentation boilerplate
CONFIGFILES=" \
./global.ionrc \
./2.ipn.ltp/amroc.ltprc \
./2.ipn.ltp/amroc.bprc \
./2.ipn.ltp/amroc.ionconfig \
./2.ipn.ltp/global.ionrc \
./2.ipn.ltp/amroc.ionrc \
./2.ipn.ltp/amroc.ionsecrc \
./2.ipn.ltp/amroc.ipnrc \
"

echo "Looking for acsadmin"
which acsadmin
if [ $? -eq 0 ] ; then
	ACS="found"
	CONFIGFILES=$CONFIGFILES" ./2.ipn.ltp/amroc.acsrc"
fi

CONFIGFILES=$CONFIGFILES"
./5.ipn.ltp/amroc.ltprc \
./5.ipn.ltp/amroc.bprc \
./5.ipn.ltp/amroc.ionconfig \
./5.ipn.ltp/global.ionrc \
./5.ipn.ltp/amroc.ionrc \
./5.ipn.ltp/amroc.ionsecrc \
./5.ipn.ltp/amroc.ipnrc \
"

if [[ $ACS == "found" ]] ; then
	CONFIGFILES=$CONFIGFILES" ./5.ipn.ltp/amroc.acsrc"
fi

CONFIGFILES=$CONFIGFILES"
./3.ipn.ltp/amroc.ltprc \
./3.ipn.ltp/amroc.bprc \
./3.ipn.ltp/amroc.ionconfig \
./3.ipn.ltp/global.ionrc \
./3.ipn.ltp/amroc.ionrc \
./3.ipn.ltp/amroc.ionsecrc \
./3.ipn.ltp/amroc.ipnrc \
"

if [[ $ACS == "found" ]] ; then
	CONFIGFILES=$CONFIGFILES" ./3.ipn.ltp/amroc.acsrc"
fi

echo "########################################"
echo
pwd | sed "s/\/.*\///" | xargs echo "NAME: "
echo
echo "PURPOSE: To determine if bptrace correctly initiates a bundle with status reports enabled, and correctly listens for said reports."
echo
echo "CONFIG: 3 node custom configuration:"
echo
for N in $CONFIGFILES
do
	echo "$N:"
	cat $N
	echo "# EOF"
	echo
done
echo "OUTPUT: Various status messages are expected to be found in
	./2.ipn.ltp/ion.log"
echo
echo "########################################"

echo "Cleaning up old ION..."
rm -f 2.ipn.ltp/ion.log 3.ipn.ltp/ion.log 5.ipn.ltp/ion.log
rm -f 5.ipn.ltp/testfile1
rm -f 5.ipn.ltp/testfile2
rm -f 5.ipn.ltp/testfile3
rm -f 5.ipn.ltp/testfile4
rm -f 5.ipn.ltp/testfile5
killm
sleep 1

echo "Starting ION..."
export ION_NODE_LIST_DIR=$PWD
rm -f ./ion_nodes

# Start nodes.
cd 2.ipn.ltp
ionadmin amroc.ionrc
cd ../3.ipn.ltp
ionadmin amroc.ionrc
cd ../5.ipn.ltp
ionadmin amroc.ionrc

if [[ $ACS == "found" ]] ; then
	cd ../2.ipn.ltp
	acsadmin amroc.acsrc
	cd ../3.ipn.ltp
	acsadmin amroc.acsrc
	cd ../5.ipn.ltp
	acsadmin amroc.acsrc
fi

cd ../2.ipn.ltp
ionadmin global.ionrc &
cd ../3.ipn.ltp
ionadmin global.ionrc &
cd ../5.ipn.ltp
ionadmin global.ionrc &

cd ../2.ipn.ltp
ionsecadmin amroc.ionsecrc &
cd ../3.ipn.ltp
ionsecadmin amroc.ionsecrc &
cd ../5.ipn.ltp
ionsecadmin amroc.ionsecrc &

cd ../2.ipn.ltp
ltpadmin amroc.ltprc &
cd ../3.ipn.ltp
ltpadmin amroc.ltprc &
cd ../5.ipn.ltp
ltpadmin amroc.ltprc &

cd ../2.ipn.ltp
bpadmin amroc.bprc &
cd ../3.ipn.ltp
bpadmin amroc.bprc &
cd ../5.ipn.ltp
bpadmin amroc.bprc &

cd ../2.ipn.ltp
../../../system_up -i "p 30" -l "p 30" -b "p 30"

if [ $? -eq 3 ]
then
	echo ""
else
	echo "Node 2 not started: Aborting Test"
	exit 1
fi
cd ../3.ipn.ltp
../../../system_up -i "p 30" -l "p 30" -b "p 30"

if [ $? -eq 3 ]
then
	echo ""
else
	echo "Node 3 not started: Aborting Test"
	exit 1
fi
cd ../5.ipn.ltp
../../../system_up -i "p 30" -l "p 30" -b "p 30"

if [ $? -eq 3 ]
then
	echo ""
else
	echo "Node 5 not started: Aborting Test"
	exit 1
fi

sleep 1
bpsink ipn:5.1 &
cd ../2.ipn.ltp

# # let user work with nodes
# bash

# trace from node 2 to node 5 with all flags enabled, and a rtt of 4 seconds (so bptrace stops listening after 4 seconds)
OUTPUT=`bptrace -qos 0.1 -flags "fwd,rcv,dlv,del" -msg "test message 1" -ttl 10 -rtt 12 ipn:2.1 ipn:5.1 ipn:2.420`
echo "$OUTPUT"
# count the number of reports that had 'okay' status message, should have 4
# fwd from node 2
# rcv from node 3
# fwd from node 3
# rcv,dlv from node 5
REPORT_OKAY=`echo "$OUTPUT" | grep 'okay' | wc -l `
if [ $REPORT_OKAY -eq 4 ]; 
then
	echo "OK: recieved all expected reports with 'okay' status."
else
	echo "ERROR: unexpected number of reports recieved, expected four (4)."
	RETVAL=1
fi

# trace from node 2 to node 5 with only the delivery flag enabled, and a rtt of 4 seconds (so bptrace stops listening after 4 seconds)
OUTPUT=`bptrace -qos 0.1 -flags dlv -msg "test message 2" -ttl 10 -rtt 12 ipn:2.1 ipn:5.1 ipn:2.420`
echo "$OUTPUT"
# count the number of reports that had 'okay' status message, should have 1
# dlv from node 5
REPORT_OKAY=`echo "$OUTPUT" | grep 'okay' | wc -l `
if [ $REPORT_OKAY -eq 1 ]; 
then
	echo "OK: recieved expected report with 'okay' status."
else
	echo "ERROR: unexpected number of reports recieved, expected one (1)."
	RETVAL=1
fi

# trace from node 2 to node 5 with only the delivery flag enabled, and a rtt of 4 seconds (so bptrace stops listening after 4 seconds)
# trace node is admin endpoint, so we should only see messages in the logfile.
OUTPUT=`bptrace -qos 0.1 -flags dlv -msg "test message 3" -ttl 10 -rtt 12 ipn:2.1 ipn:5.1 ipn:2.0`
echo "$OUTPUT"
# count the number of reports that had 'okay' status message, should have 0
REPORT_OKAY=`echo "$OUTPUT" | grep 'okay' | wc -l `
# wait for contacts to temrinate (and give admin program time to put report into logfile)
sleep 7
if [ $REPORT_OKAY -eq 0 ]; 
then
	COUNT=`grep " \[s\] " ion.log | grep -E "status [8|9]" | wc -l`
	if [ $COUNT -eq 1 ];
	then
		echo "OK: found expected delivery report in log file."
	else
		echo "ERROR: No delivery report found in log file."
		RETVAL=1
	fi
else
	echo "ERROR: unexpected number of reports recieved, expected zero (0)."
	RETVAL=1
fi

# Shut down ION processes.
echo
echo "Stopping ION..."
cd ../2.ipn.ltp
./ionstop &
cd ../3.ipn.ltp
./ionstop &
cd ../5.ipn.ltp
./ionstop &

# Give all three nodes time to shut down, then clean up.
sleep 5
killm
echo "bptrace test completed."
exit $RETVAL
